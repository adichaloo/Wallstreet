from .models import *# from .insertUtilities import *def matchBuy(company, user, buyPrice, noShares):    exec("buyTable = BuyTable_" + company.tempName)    exec("sellTable = SellTable_" + company.tempName)    # Calling User Preprocessing    '''    user.netWorth -= buyPrice * noShares    user.save()    buyTable.objects.create(company=company.pk, profile=user, bidShares=noShares, bidPrice=buyPrice)    '''    # Order wrt timestamp    sorted_buyTable = buyTable.objects.all().order_by('-bidPrice')    sorted_sellTable = sellTable.objects.all().order_by('bidPrice')    if sorted_buyTable and sorted_sellTable:        i = 0        j = 0        while i < len(sorted_buyTable) and j < len(sorted_sellTable) and sorted_buyTable[i].bidPrice > sorted_sellTable[j].bidPrice:            # User Match with sorted_buyTable[i] and sorted_sellTable[j]            flag = userTransaction(company, sorted_buyTable[i], sorted_sellTable[j])            i = i + (flag == -1 or flag == 0)            j = j + (flag == 1 or flag == 0)def userTransaction(company, buyTable, sellTable, buyObject, sellObject):    userBuy = Profile.objects.get(pk=buyObject.profile.pk)    userSell = Profile.objects.get(pk=sellObject.profile.pk)    UserShareTable.objects.create(profile=userBuy, company=company, bidShares=buyObject.bidShares,                                  bidPrice=buyObject.bidPrice)    moneyAlter(userSell, sellObject.bidPrice * sellObject.bidShares, True)    if buyObject.noShares == sellObject.noShares:        UserHistory.objects.create(profile=userBuy,company=company,bidShares=buyObject.bidShares,bidPrice=buyObject.bidPrice,buySell=True)        UserHistory.objects.create(profile=userSell, company=company, bidShares=sellObject.bidShares,                                   bidPrice=sellObject.bidPrice, buySell=False)        buyTable.objects.get(pk=buyObject.pk).delete()        sellTable.objects.get(pk=sellObject.pk).delete()        return 0    elif buyObject.bidShares > sellObject.bidShares:        buyObject.bidShares -= sellObject.bidShares        buyObject.save()        UserHistory.objects.create(profile=userBuy, company=company, bidShares=buyObject.bidShares,                                   bidPrice=buyObject.bidPrice, buySell=True)        UserHistory.objects.create(profile=userSell, company=company, bidShares=sellObject.bidShares,                                   bidPrice=sellObject.bidPrice, buySell=False)        sellTable.objects.get(pk=sellObject.pk).delete()        return 1    else:        sellObject.bidShares -= buyObject.bidShares        sellObject.save()        UserHistory.objects.create(profile=userBuy, company=company, bidShares=buyObject.bidShares,                                   bidPrice=buyObject.bidPrice, buySell=True)        UserHistory.objects.create(profile=userSell, company=company, bidShares=sellObject.bidShares,                                   bidPrice=sellObject.bidPrice, buySell=False)        buyTable.objects.get(pk=buyObject.pk).delete()        return -1def moneyAlter(user, amount, addSubtract):    # addSubtract = 1 => Add money    # addSubtract = 0 => Subtract Money    cut = amount * 0.01    amount = amount - cut    if addSubtract:        user.cash = user.cash + amount    else:        user.cash = user.cash - amount    user.save()